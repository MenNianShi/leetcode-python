# 森林中，每个兔子都有颜色。其中一些兔子（可能是全部）告诉你还有多少其他的兔子和自己有相同的颜色。我们将这些回答放在 answers 数组里。
#
# 返回森林中兔子的最少数量。
#
# 示例:
# 输入: answers = [1, 1, 2]
# 输出: 5
# 解释:
# 两只回答了 "1" 的兔子可能有相同的颜色，设为红色。
# 之后回答了 "2" 的兔子不会是红色，否则他们的回答会相互矛盾。
# 设回答了 "2" 的兔子为蓝色。
# 此外，森林中还应有另外 2 只蓝色兔子的回答没有包含在数组中。
# 因此森林中兔子的最少数量是 5: 3 只回答的和 2 只没有回答的。
#
# 输入: answers = [10, 10, 10]
# 输出: 11
#
# 输入: answers = []
# 输出: 0
#
# 统计每个数字出现的次数，以2举例
#
# 输入中有一个2
# 说明还有其他两个兔子有相同的颜色，至少有3只兔子
# 输入中有两个2
# 对于其中一只兔子来说，至少还有其他两只相同颜色，数组中出现了一只，那么还有一只没上报，总共3只
# 输入中有四个2
# 这4只兔子中的3只可以是一种颜色，但第四只必须是其他颜色，对于第四只按照第一种情况处理，所以一共有6只
# 总结一下可以得到公式：
# math.ceil(count[num]/(num+1)) * (num+1)

import math
import  collections
class Solution:
    def numRabbits(self, answers) :
        count = collections.Counter(answers)
        res = 0
        for num in count:
            res += math.ceil(count[num]/(num+1)) * (num+1)
        return res

# 781. 森林中的兔子.py